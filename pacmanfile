#!/bin/bash

set -u

usage_msg='
NAME:
  pacmanfile - Manage your pacman packages declaratively

SYNOPSIS:
  pacmanfile <operations> [options]

OPERATIONS:
  help   Show this help
  dump   Dump your installed packages into a pacmanfile
  sync   Synchronize your installed packages with your pacmanfile

OPTIONS:
  --noconfirm   Install and uninstall without asking for confirmation
'

package_manager=pacman
if [ -x "$(command -v yay)" ]; then
  package_manager=yay
fi
if [ -x "$(command -v paru)" ]; then
  package_manager=paru
fi

config_dir=${XDG_CONFIG_HOME:-$HOME/.config}
pacmanfile_dir="${config_dir}/pacmanfile"

# Parse arguments
operation=help
option_confirm='--confirm'

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
      dump)
        operation=dump
        shift
        ;;

      sync)
        operation=sync
        shift
        ;;

      --noconfirm)
        option_confirm='--noconfirm'
        shift
        ;;

      *)
        shift
        ;;
  esac
done

function dump {

  dump_file="${pacmanfile_dir}/pacmanfile-dumped.txt"
  installed_packages=$($package_manager --query --explicit --quiet | sort --unique)

  # Create config folder if not present
  if [ ! -d "$pacmanfile_dir" ]; then
        mkdir -p "$pacmanfile_dir"
  fi

  echo "$installed_packages" > "$dump_file"

  echo "Installed packages dumped to $dump_file"
}

function sync {
  pacmanfile_packages=$(sort --unique "${pacmanfile_dir}"/pacmanfile*.txt | grep -E '^[^#].+')
  installed_packages=$($package_manager --query --explicit --quiet | sort --unique)

  to_install=$(diff --new-line-format="" --unchanged-line-format="" <(echo "$pacmanfile_packages") <(echo "$installed_packages"))
  if [ -n "$to_install" ]; then
    $package_manager "$option_confirm" --sync $to_install
  fi

  to_remove=$(diff --new-line-format="" --unchanged-line-format="" <(echo "$installed_packages") <(echo "$pacmanfile_packages"))
  if [ -n "$to_remove" ]; then
    $package_manager "$option_confirm" --remove --nosave --recursive $to_remove
  fi

  if [ -z "$to_install" ] && [ -z "$to_remove" ]; then
    echo "Everything is synced"
  fi
}

case $operation in
  dump)
    dump "$@"
    ;;

  sync)
    sync "$@"
    ;;

  help)
    echo "$usage_msg"
    exit 0
    ;;

  *)
    echo "$usage_msg"
    exit 1
    ;;
esac
